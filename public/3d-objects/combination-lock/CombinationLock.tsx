/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 CombinationLock.gltf -t -T -k -K s 
Files: CombinationLock.gltf [38.9KB] > C:\Users\owner\Desktop\maliek_davis\public\3d-objects\combination-lock\CombinationLock-transformed.glb [1.19MB] (-2958%)
Author: artron.classic (https://sketchfab.com/artron.classic)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/combination-lock-b8100aaf195947a683c23f609f77b068
Title: Combination lock
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { useFrame } from '@react-three/fiber'

type ActionName = 'Animation'

interface GLTFAction extends THREE.AnimationClip {
  name: ActionName
}

type GLTFResult = GLTF & {
  nodes: {
    Object_11: THREE.Mesh
    Object_13: THREE.Mesh
    Object_14: THREE.Mesh
    Object_16: THREE.Mesh
    Object_17: THREE.Mesh
    Object_19: THREE.Mesh
    Object_20: THREE.Mesh
    Object_22: THREE.Mesh
    Object_23: THREE.Mesh
    Object_25: THREE.Mesh
    Object_26: THREE.Mesh
    Object_4: THREE.Mesh
    Object_7: THREE.Mesh
  }
  materials: {
    ClockFace: THREE.MeshPhysicalMaterial
    BoxClockFace: THREE.MeshPhysicalMaterial
    material: THREE.MeshPhysicalMaterial
  }
  animations: GLTFAction[]
}

export default function CombinationLock(props: JSX.IntrinsicElements['group']) {
  const group = React.useRef<THREE.Group>(null)
  const { nodes, materials, animations } = useGLTF('/3d-objects/combination-lock/CombinationLock-transformed.glb') as GLTFResult
  const { actions } = useAnimations(animations, group);

  useFrame(()=> {
    if (actions.Animation) {
      actions.Animation.play();
    }
  })

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="GLTF_SceneRootNode">
          <group name="Lock_1" position={[0, 0.1, 0.5]}>
            <mesh name="Object_11" geometry={nodes.Object_11.geometry} material={materials.ClockFace} />
          </group>
          <group name="ClockFace5_2" position={[0.22, 0.7, -0.724]}>
            <mesh name="Object_13" geometry={nodes.Object_13.geometry} material={materials.BoxClockFace} />
            <mesh name="Object_14" geometry={nodes.Object_14.geometry} material={materials.ClockFace} />
          </group>
          <group name="ClockFace1_3" position={[0.22, 0.7, 0.716]}>
            <mesh name="Object_16" geometry={nodes.Object_16.geometry} material={materials.BoxClockFace} />
            <mesh name="Object_17" geometry={nodes.Object_17.geometry} material={materials.ClockFace} />
          </group>
          <group name="ClockFace2_4" position={[0.22, 0.7, 0.356]}>
            <mesh name="Object_19" geometry={nodes.Object_19.geometry} material={materials.BoxClockFace} />
            <mesh name="Object_20" geometry={nodes.Object_20.geometry} material={materials.ClockFace} />
          </group>
          <group name="ClockFace3_5" position={[0.22, 0.7, -0.004]}>
            <mesh name="Object_22" geometry={nodes.Object_22.geometry} material={materials.BoxClockFace} />
            <mesh name="Object_23" geometry={nodes.Object_23.geometry} material={materials.ClockFace} />
          </group>
          <group name="ClockFace4_6" position={[0.22, 0.7, -0.364]}>
            <mesh name="Object_25" geometry={nodes.Object_25.geometry} material={materials.BoxClockFace} />
            <mesh name="Object_26" geometry={nodes.Object_26.geometry} material={materials.ClockFace} />
          </group>
        </group>
        <mesh name="Object_4" geometry={nodes.Object_4.geometry} material={materials.material} />
        <mesh name="Object_7" geometry={nodes.Object_7.geometry} material={materials.ClockFace} />
      </group>
    </group>
  )
}

useGLTF.preload('/3d-objects/combination-lock/CombinationLock-transformed.glb')
