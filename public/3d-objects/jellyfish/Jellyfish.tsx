/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 Jellyfish.gltf -t -T -k -K s 
Files: Jellyfish.gltf [44.66KB] > C:\Users\owner\Desktop\maliek_davis\public\3d-objects\jellyfish\Jellyfish-transformed.glb [4.22MB] (-9343%)
Author: n- (https://sketchfab.com/n-)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/jellyfish-003-7ef761c3eb2143b6a7178ddfb97e9e88
Title: Jellyfish_003
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { JoinGrowthProps } from '@/library/types/common'

type ActionName = 'Object_0'

interface GLTFAction extends THREE.AnimationClip {
  name: ActionName
}

type GLTFResult = GLTF & {
  nodes: {
    Jellyfish_003Shape: THREE.Mesh
  }
  materials: {
    Jellyfish_003Shape: THREE.MeshBasicMaterial
  }
  animations: GLTFAction[]
}

const Jellyfish: React.FC<JoinGrowthProps> = ({ animate, ...props }) => {
  const group = React.useRef<THREE.Group>(null)
  const { nodes, materials, animations } = useGLTF('/3d-objects/jellyfish/Jellyfish-transformed.glb') as GLTFResult
  const { actions } = useAnimations(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <mesh name="Jellyfish_003Shape" geometry={nodes.Jellyfish_003Shape.geometry} material={materials.Jellyfish_003Shape} morphTargetDictionary={nodes.Jellyfish_003Shape.morphTargetDictionary} morphTargetInfluences={nodes.Jellyfish_003Shape.morphTargetInfluences} position={[0.634, -0.001, -0.239]} rotation={[0, Math.PI / 2, 0]} />
      </group>
    </group>
  )
}

useGLTF.preload('/3d-objects/jellyfish/Jellyfish-transformed.glb')
export default Jellyfish;
