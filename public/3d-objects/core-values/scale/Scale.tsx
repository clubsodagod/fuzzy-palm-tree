/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 Scale.gltf -k -K -t -T s 
Files: Scale.gltf [209.74KB] > C:\Users\owner\Desktop\maliek_davis\public\3d-objects\core-values\scale\Scale-transformed.glb [10.03MB] (-4682%)
Author: Every 3D (https://sketchfab.com/Every_3D)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/animation-scales-work-vs-lazy-f4c16b93c0b84abbac6f29395785370f
Title: Animation Scales | Весы | Work vs Lazy
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type ActionName = 'Object_0'

interface GLTFAction extends THREE.AnimationClip {
  name: ActionName
}

type GLTFResult = GLTF & {
  nodes: {
    Circle_006_2_0: THREE.Mesh
    Circle_007: THREE.Mesh
    NurbsPath_001: THREE.Mesh
    NurbsPath_007: THREE.Mesh
  }
  materials: {
    Circle_006: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

export default function Model(props: JSX.IntrinsicElements['group']) {
  const group = React.useRef<THREE.Group>(null)
  const { nodes, materials, animations } = useGLTF('/3d-objects/core-values/scale/Scale-transformed.glb') as GLTFResult
  const { actions } = useAnimations(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <mesh name="Circle_006_2_0" geometry={nodes.Circle_006_2_0.geometry} material={materials.Circle_006} />
        <mesh name="Circle_007" geometry={nodes.Circle_007.geometry} material={materials.Circle_006} morphTargetDictionary={nodes.Circle_007.morphTargetDictionary} morphTargetInfluences={nodes.Circle_007.morphTargetInfluences} />
        <mesh name="NurbsPath_001" geometry={nodes.NurbsPath_001.geometry} material={materials.Circle_006} morphTargetDictionary={nodes.NurbsPath_001.morphTargetDictionary} morphTargetInfluences={nodes.NurbsPath_001.morphTargetInfluences} />
        <mesh name="NurbsPath_007" geometry={nodes.NurbsPath_007.geometry} material={materials.Circle_006} morphTargetDictionary={nodes.NurbsPath_007.morphTargetDictionary} morphTargetInfluences={nodes.NurbsPath_007.morphTargetInfluences} />
      </group>
    </group>
  )
}

useGLTF.preload('/3d-objects/core-values/scale/Scale-transformed.glb')
