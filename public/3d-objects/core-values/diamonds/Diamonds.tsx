/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 Diamonds.gltf -k -K -t -T s 
Files: Diamonds.gltf [20.64KB] > C:\Users\owner\Desktop\maliek_davis\public\3d-objects\core-values\diamonds\Diamonds-transformed.glb [31.46KB] (-52%)
Author: 1catalogue (https://sketchfab.com/1catalogue)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/diamonds-f3c067750ca3403fa8106f672b5bcffe
Title: Diamonds
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type ActionName = 'Take 01'

interface GLTFAction extends THREE.AnimationClip {
  name: ActionName
}

type GLTFResult = GLTF & {
  nodes: {
    diamond001_0: THREE.Mesh
    ['A-diamond_0']: THREE.Mesh
    ['A-diamond001_0']: THREE.Mesh
    ['A-diamond002_0']: THREE.Mesh
    ['1catalogue_Mesh_0']: THREE.Mesh
  }
  materials: {
    PaletteMaterial001: THREE.MeshStandardMaterial
    PaletteMaterial002: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

export default function Model(props: JSX.IntrinsicElements['group']) {
  const group = React.useRef<THREE.Group>(null)
  const { nodes, materials, animations } = useGLTF('/3d-objects/core-values/diamonds/Diamonds-transformed.glb') as GLTFResult
  const { actions } = useAnimations(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Root" rotation={[-Math.PI / 2, 0, 0]} scale={0.375}>
          <group name="diamond001" position={[0, 0, 1.113]} scale={[0.489, 1, 1]}>
            <mesh name="diamond001_0" geometry={nodes.diamond001_0.geometry} material={materials.PaletteMaterial001} />
          </group>
          <group name="A-diamond" position={[-0.818, -0.011, 10.083]} rotation={[0, 1.571, 0]}>
            <mesh name="A-diamond_0" geometry={nodes['A-diamond_0'].geometry} material={materials.PaletteMaterial001} />
          </group>
          <group name="A-diamond001" position={[0.229, 2.119, 8.923]} rotation={[0, 1.571, 0]}>
            <mesh name="A-diamond001_0" geometry={nodes['A-diamond001_0'].geometry} material={materials.PaletteMaterial001} />
          </group>
          <group name="A-diamond002" position={[0.884, -1.237, 7.411]} rotation={[0, 1.571, 0]}>
            <mesh name="A-diamond002_0" geometry={nodes['A-diamond002_0'].geometry} material={materials.PaletteMaterial001} />
          </group>
        </group>
        <mesh name="1catalogue_Mesh_0" geometry={nodes['1catalogue_Mesh_0'].geometry} material={materials.PaletteMaterial002} position={[0, 2.373, -0.001]} scale={0.079} />
      </group>
    </group>
  )
}

useGLTF.preload('/3d-objects/core-values/diamonds/Diamonds-transformed.glb')
