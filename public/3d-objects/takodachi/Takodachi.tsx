/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 Takodachi.gltf -t -T -k -K s 
Files: Takodachi.gltf [27.09KB] > C:\Users\owner\Desktop\maliek_davis\public\3d-objects\takodachi\Takodachi-transformed.glb [38.45KB] (-42%)
Author: RONI (https://sketchfab.com/ronniechoyy)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/happy-takodachi-animated-2d998fe5a0c746098da8c7005668c3e0
Title: Happy Takodachi [Animated]
*/

import * as THREE from 'three'
import React from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF, SkeletonUtils } from 'three-stdlib'
import { JoinGrowthProps } from '@/library/types/common'

type ActionName = 'CINEMA_4D___'

interface GLTFAction extends THREE.AnimationClip {
  name: ActionName
}

type GLTFResult = GLTF & {
  nodes: {
    Object_8: THREE.SkinnedMesh
    Object_9: THREE.SkinnedMesh
    _rootJoint: THREE.Bone
  }
  materials: {
    material: THREE.MeshStandardMaterial
    ['.002']: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

const Takodachi: React.FC<JoinGrowthProps> = ({ animate, ...props }) => {
  const group = React.useRef<THREE.Group>(null)
  const { scene, animations } = useGLTF('/3d-objects/takodachi/Takodachi-transformed.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone) as GLTFResult
  const { actions } = useAnimations(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <primitive object={nodes._rootJoint} />
        <skinnedMesh name="Object_8" geometry={nodes.Object_8.geometry} material={materials.material} skeleton={nodes.Object_8.skeleton} position={[0, 2.343, -0.107]} scale={0.01} />
        <skinnedMesh name="Object_9" geometry={nodes.Object_9.geometry} material={materials['.002']} skeleton={nodes.Object_9.skeleton} position={[0, 2.343, -0.107]} scale={0.01} />
      </group>
    </group>
  )
}

useGLTF.preload('/3d-objects/takodachi/Takodachi-transformed.glb');
export default Takodachi;
