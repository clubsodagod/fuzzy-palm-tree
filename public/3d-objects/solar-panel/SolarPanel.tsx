/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 SolarPanel.gltf -t -T -k -K s 
Files: SolarPanel.gltf [13.83KB] > C:\Users\owner\Desktop\maliek_davis\public\3d-objects\solar-panel\SolarPanel-transformed.glb [177.36KB] (-1182%)
Author: LineJansson (https://sketchfab.com/LineJansson)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/solar-panel-b132aa68f2614bc1a8bf6aed886427de
Title: Solar Panel
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { JoinGrowthProps } from '@/library/types/common'

type ActionName = 'Take 001'

interface GLTFAction extends THREE.AnimationClip {
  name: ActionName
}

type GLTFResult = GLTF & {
  nodes: {
    Box001_alluminium_0: THREE.Mesh
    Box001_paneler_0: THREE.Mesh
    motor_alluminium_0: THREE.Mesh
    Cylinder001_alluminium_0: THREE.Mesh
    Circle001_grass_0: THREE.Mesh
  }
  materials: {
    alluminium: THREE.MeshStandardMaterial
    paneler: THREE.MeshStandardMaterial
    grass: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

export default function Model(props: JSX.IntrinsicElements['group']) {
  const group = React.useRef<THREE.Group>(null)
  const { nodes, materials, animations } = useGLTF('/3d-objects/solar-panel/SolarPanel-transformed.glb') as GLTFResult
  const { actions } = useAnimations(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="RootNode">
          <group name="motor" position={[10, -27.889, 0]} rotation={[-Math.PI / 4, -1.571, 0]}>
            <group name="Box001" position={[0, 27.889, 10]} rotation={[-Math.PI / 2, 0, Math.PI / 2]}>
              <mesh name="Box001_alluminium_0" geometry={nodes.Box001_alluminium_0.geometry} material={materials.alluminium} />
              <mesh name="Box001_paneler_0" geometry={nodes.Box001_paneler_0.geometry} material={materials.paneler} />
            </group>
            <mesh name="motor_alluminium_0" geometry={nodes.motor_alluminium_0.geometry} material={materials.alluminium} />
          </group>
        </group>
        <mesh name="Cylinder001_alluminium_0" geometry={nodes.Cylinder001_alluminium_0.geometry} material={materials.alluminium} position={[0.007, -27.971, 0.003]} rotation={[-Math.PI / 2, 0, 0]} />
        <mesh name="Circle001_grass_0" geometry={nodes.Circle001_grass_0.geometry} material={materials.grass} position={[1.169, -473.708, -2.254]} rotation={[-Math.PI / 2, 0, 0]} />
      </group>
    </group>
  )
}

useGLTF.preload('/3d-objects/solar-panel/SolarPanel-transformed.glb');
