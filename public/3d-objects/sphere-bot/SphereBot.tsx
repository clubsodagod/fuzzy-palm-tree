/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 sphereBot.gltf -t -T -k -K s 
Files: sphereBot.gltf [1.06MB] > C:\Users\owner\Desktop\maliek_davis\public\3d-objects\sphere-bot\sphereBot-transformed.glb [2.13MB] (-100%)
Author: 3DHaupt (https://sketchfab.com/dennish2010)
License: CC-BY-NC-SA-4.0 (http://creativecommons.org/licenses/by-nc-sa/4.0/)
Source: https://sketchfab.com/3d-models/sphere-bot-6c3a32958c2d43cdbf12a7109616bdbe
Title: Sphere Bot
*/

import * as THREE from 'three'
import React from 'react'
import { useFrame, useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF, SkeletonUtils } from 'three-stdlib'

type ActionName = '01_Sphere_bot_Roll' | '02_Sphere_bot_Run_Cycle' | '03_Sphere_bot_Open' | '04_Sphere_bot_Attack' | '05_Sphere_bot_WalkCycle' | '06_Sphere_bot_Run_Attack' | '07_Sphere_bot_Jump'

interface GLTFAction extends THREE.AnimationClip {
  name: ActionName
}

type GLTFResult = GLTF & {
  nodes: {
    Plane_Material_001_0: THREE.Mesh
    Object_7: THREE.SkinnedMesh
    Object_9: THREE.SkinnedMesh
    Object_11: THREE.SkinnedMesh
    Object_13: THREE.SkinnedMesh
    Object_15: THREE.SkinnedMesh
    Object_17: THREE.SkinnedMesh
    Object_19: THREE.SkinnedMesh
    Object_21: THREE.SkinnedMesh
    Object_23: THREE.SkinnedMesh
    Object_25: THREE.SkinnedMesh
    Object_27: THREE.SkinnedMesh
    Object_29: THREE.SkinnedMesh
    Object_31: THREE.SkinnedMesh
    Object_33: THREE.SkinnedMesh
    Object_34: THREE.SkinnedMesh
    _rootJoint: THREE.Bone
  }
  materials: {
    Material_001: THREE.MeshStandardMaterial
    Sphere_Bot__Leg_Ao: THREE.MeshStandardMaterial
    Sphere_Bot__Leg_Nor: THREE.MeshStandardMaterial
    Material: THREE.MeshStandardMaterial
    Material_002: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

export default function SphereBot(props: JSX.IntrinsicElements['group']) {
  const group = React.useRef<THREE.Group>(null)
  const { scene, animations } = useGLTF('/3d-objects/sphere-bot/sphereBot-transformed.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone) as GLTFResult
  const { actions } = useAnimations(animations, group)
  
  useFrame(({ clock }) => {
    const elapsedTime = clock.getElapsedTime();
    if(actions['05_Sphere_bot_WalkCycle']) {
      actions['05_Sphere_bot_WalkCycle'].play()
    }
  });

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Object_4" scale={0.667}>
          <group name="Hemi" position={[3.195, 7.238, 1.018]} rotation={[0.413, -0.073, -0.79]} />
        </group>
        <primitive object={nodes._rootJoint} />
        {/* <mesh name="Plane_Material_001_0" geometry={nodes.Plane_Material_001_0.geometry} material={materials.Material_001} rotation={[-Math.PI / 2, 0, 0]} scale={0.667} /> */}
        <skinnedMesh name="Object_7" geometry={nodes.Object_7.geometry} material={materials.Sphere_Bot__Leg_Ao} skeleton={nodes.Object_7.skeleton} scale={0.667} />
        <skinnedMesh name="Object_9" geometry={nodes.Object_9.geometry} material={materials.Sphere_Bot__Leg_Nor} skeleton={nodes.Object_9.skeleton} scale={0.667} />
        <skinnedMesh name="Object_11" geometry={nodes.Object_11.geometry} material={materials.Sphere_Bot__Leg_Nor} skeleton={nodes.Object_11.skeleton} scale={0.667} />
        <skinnedMesh name="Object_13" geometry={nodes.Object_13.geometry} material={materials.Sphere_Bot__Leg_Nor} skeleton={nodes.Object_13.skeleton} scale={0.667} />
        <skinnedMesh name="Object_15" geometry={nodes.Object_15.geometry} material={materials.Sphere_Bot__Leg_Nor} skeleton={nodes.Object_15.skeleton} scale={0.667} />
        <skinnedMesh name="Object_17" geometry={nodes.Object_17.geometry} material={materials.Sphere_Bot__Leg_Nor} skeleton={nodes.Object_17.skeleton} scale={0.667} />
        <skinnedMesh name="Object_19" geometry={nodes.Object_19.geometry} material={materials.Sphere_Bot__Leg_Nor} skeleton={nodes.Object_19.skeleton} scale={0.667} />
        <skinnedMesh name="Object_21" geometry={nodes.Object_21.geometry} material={materials.Sphere_Bot__Leg_Nor} skeleton={nodes.Object_21.skeleton} scale={0.667} />
        <skinnedMesh name="Object_23" geometry={nodes.Object_23.geometry} material={materials.Sphere_Bot__Leg_Nor} skeleton={nodes.Object_23.skeleton} scale={0.667} />
        <skinnedMesh name="Object_25" geometry={nodes.Object_25.geometry} material={materials.Sphere_Bot__Leg_Nor} skeleton={nodes.Object_25.skeleton} scale={0.667} />
        <skinnedMesh name="Object_27" geometry={nodes.Object_27.geometry} material={materials.Sphere_Bot__Leg_Nor} skeleton={nodes.Object_27.skeleton} scale={0.667} />
        <skinnedMesh name="Object_29" geometry={nodes.Object_29.geometry} material={materials.Sphere_Bot__Leg_Nor} skeleton={nodes.Object_29.skeleton} scale={0.667} />
        <skinnedMesh name="Object_31" geometry={nodes.Object_31.geometry} material={materials.Sphere_Bot__Leg_Nor} skeleton={nodes.Object_31.skeleton} scale={0.667} />
        <skinnedMesh name="Object_33" geometry={nodes.Object_33.geometry} material={materials.Material} skeleton={nodes.Object_33.skeleton} scale={0.667} />
        <skinnedMesh name="Object_34" geometry={nodes.Object_34.geometry} material={materials.Material_002} skeleton={nodes.Object_34.skeleton} scale={0.667} />
      </group>
    </group>
  )
}

useGLTF.preload('/3d-objects/sphere-bot/sphereBot-transformed.glb')
