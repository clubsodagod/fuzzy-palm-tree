/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 dataChartOne.gltf -t -T -k -K s 
Files: dataChartOne.gltf [9.71KB] > C:\Users\owner\Desktop\maliek_davis\public\3d-objects\data-chart-one\dataChartOne-transformed.glb [10.26KB] (-6%)
Author: rikugo.studio (https://sketchfab.com/rikugo.studio)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/data-chart-infographics-60a66b3b47d54aaa917378c7380ebe60
Title: Data Chart Infographics
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Object_4: THREE.Mesh
    Object_6: THREE.Mesh
    Object_8: THREE.Mesh
    Object_10: THREE.Mesh
  }
  materials: {
    Garis: THREE.MeshStandardMaterial
    Black: THREE.MeshStandardMaterial
    Kanvas: THREE.MeshStandardMaterial
    Graphic: THREE.MeshStandardMaterial
  }
}

export default function DataChartOne(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/dataChartOne-transformed.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <mesh name="Object_4" geometry={nodes.Object_4.geometry} material={materials.Garis} position={[-0.289, 0, 0]} scale={[0.048, 2.639, 0.115]} />
        <mesh name="Object_6" geometry={nodes.Object_6.geometry} material={materials.Black} position={[0, -0.396, 0]} rotation={[-Math.PI, 0, 0]} scale={[-0.376, 0.376, 0.376]} />
        <mesh name="Object_8" geometry={nodes.Object_8.geometry} material={materials.Kanvas} rotation={[Math.PI / 2, 0, 0]} scale={[5.278, 5.278, 4.037]} />
        <mesh name="Object_10" geometry={nodes.Object_10.geometry} material={materials.Graphic} position={[-0.232, -0.116, 0]} rotation={[Math.PI / 2, 0, 0]} scale={1.585} />
      </group>
    </group>
  )
}

useGLTF.preload('/3d-objects/data-chart-one/dataChartOne-transformed.glb')
