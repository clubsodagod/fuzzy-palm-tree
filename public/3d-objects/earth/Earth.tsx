/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 Earth.gltf -k -K -t -T s 
Files: Earth.gltf [8.82KB] > C:\Users\owner\Desktop\maliek_davis\public\3d-objects\earth\Earth-transformed.glb [274.93KB] (-3017%)
Author: Shubhanshu Soni (https://sketchfab.com/sonishubhanshu99)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/earth-37249acae18b406d8c1c160d7c0bc8e6
Title: Earth
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { useFrame } from '@react-three/fiber'

type ActionName = 'Clouds|CloudsAction'

interface GLTFAction extends THREE.AnimationClip {
  name: ActionName
}

type GLTFResult = GLTF & {
  nodes: {
    Clouds_Clouds_0: THREE.Mesh
    Earth_Earth_0: THREE.Mesh
  }
  materials: {
    Clouds: THREE.MeshStandardMaterial
    Earth: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}


export default function Earth(props: JSX.IntrinsicElements['group']) {
  const group = React.useRef<THREE.Group>(null)
  const { nodes, materials, animations } = useGLTF('/3d-objects/earth/Earth-transformed.glb') as GLTFResult
  const { actions } = useAnimations(animations, group)

useFrame(()=> {
  if(actions['Clouds|CloudsAction']) {
    actions['Clouds|CloudsAction'].play()
  }
});

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="RootNode">
          <group name="Clouds" rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh name="Clouds_Clouds_0" geometry={nodes.Clouds_Clouds_0.geometry} material={materials.Clouds} />
          </group>
        </group>
        <mesh name="Earth_Earth_0" geometry={nodes.Earth_Earth_0.geometry} material={materials.Earth} rotation={[-Math.PI / 2, 0, -1.544]} scale={99.307} />
      </group>
    </group>
  )
}

useGLTF.preload('/3d-objects/earth/Earth-transformed.glb')
