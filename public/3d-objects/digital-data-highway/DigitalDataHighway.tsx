/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 DigitalDataHighway.gltf -t -T -k -K s 
Files: DigitalDataHighway.gltf [33.06KB] > C:\Users\owner\Desktop\maliek_davis\public\3d-objects\digital-data-highway\DigitalDataHighway-transformed.glb [1.52MB] (-4510%)
Author: smice (https://sketchfab.com/smice)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/digital-data-highway-284d2a29f1bc49d682753b854e03cd6e
Title: Digital Data Highway
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { JoinGrowthProps } from '@/library/types/common'

type ActionName = 'Action' | 'TorusAction'

interface GLTFAction extends THREE.AnimationClip {
  name: ActionName
}

type GLTFResult = GLTF & {
  nodes: {
    Object_4: THREE.Mesh
    Object_5: THREE.Mesh
    Object_6: THREE.Mesh
    Object_7: THREE.Mesh
  }
  materials: {
    PaletteMaterial001: THREE.MeshPhysicalMaterial
    PaletteMaterial002: THREE.MeshStandardMaterial
    PaletteMaterial003: THREE.MeshPhysicalMaterial
    PaletteMaterial004: THREE.MeshPhysicalMaterial
  }
  animations: GLTFAction[]
}

const DigitalDataHighway: React.FC<JoinGrowthProps> = ({ animate, ...props }) => {
  const group = React.useRef<THREE.Group>(null);
  const { nodes, materials, animations } = useGLTF('/3d-objects/digital-data-highway/DigitalDataHighway-transformed.glb') as GLTFResult
  const { actions } = useAnimations(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="GLTF_SceneRootNode">
          <group name="Torus_1">
            <mesh name="Object_4" geometry={nodes.Object_4.geometry} material={materials.PaletteMaterial001} />
            <mesh name="Object_5" geometry={nodes.Object_5.geometry} material={materials.PaletteMaterial002} />
            <mesh name="Object_6" geometry={nodes.Object_6.geometry} material={materials.PaletteMaterial003} />
            <mesh name="Object_7" geometry={nodes.Object_7.geometry} material={materials.PaletteMaterial004} />
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/3d-objects/digital-data-highway/DigitalDataHighway-transformed.glb')
export default DigitalDataHighway