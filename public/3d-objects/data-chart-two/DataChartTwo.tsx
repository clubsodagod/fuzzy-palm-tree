/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 dataChartTwo.gltf -t -T -k -K s 
Files: dataChartTwo.gltf [14.7KB] > C:\Users\owner\Desktop\maliek_davis\public\3d-objects\data-chart-two\dataChartTwo-transformed.glb [10.08KB] (31%)
Author: rikugo.studio (https://sketchfab.com/rikugo.studio)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/data-chart-graphic-table-infographic-2ac83df8b7b34958b28dcbc3ed35db28
Title: Data Chart Graphic Table Infographic
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type ActionName = 'Animation'

interface GLTFAction extends THREE.AnimationClip {
  name: ActionName
}

type GLTFResult = GLTF & {
  nodes: {
    Object_4: THREE.Mesh
    Object_6: THREE.Mesh
    Object_16: THREE.Mesh
  }
  materials: {
    Block: THREE.MeshStandardMaterial
    Glass: THREE.MeshStandardMaterial
    Block_Bawah: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

export default function DataChartTwo(props: JSX.IntrinsicElements['group']) {
  const group = React.useRef<THREE.Group>(null)
  const { nodes, materials, animations } = useGLTF('/dataChartTwo-transformed.glb') as GLTFResult
  const { actions } = useAnimations(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="GLTF_SceneRootNode">
          <group name="Empty017_15" position={[0.543, 0.261, 1.124]} scale={2.29} />
        </group>
        <mesh name="Object_4" geometry={nodes.Object_4.geometry} material={materials.Block} />
        <mesh name="Object_6" geometry={nodes.Object_6.geometry} material={materials.Glass} />
        <mesh name="Object_16" geometry={nodes.Object_16.geometry} material={materials.Block_Bawah} />
      </group>
    </group>
  )
}

useGLTF.preload('/3d-objects/data-chart-two/dataChartTwo-transformed.glb')
