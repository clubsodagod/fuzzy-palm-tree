/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 scene.gltf -k -K -t -T s 
Files: scene.gltf [13.39KB] > C:\Users\owner\Desktop\maliek_davis\public\3d-objects\digital-solutions\techno-planet\scene-transformed.glb [3.19MB] (-23731%)
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    TechnoPlanet_1_0: THREE.Mesh
    TechnoPlanetFlats_2_0: THREE.Mesh
    TechnoCity_3_0: THREE.Mesh
    Atmo_Mat20_0: THREE.Mesh
  }
  materials: {
    material: THREE.MeshStandardMaterial
    material_1: THREE.MeshStandardMaterial
    material_2: THREE.MeshStandardMaterial
    Mat20: THREE.MeshStandardMaterial
  }
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/3d-objects/digital-solutions/techno-planet/scene-transformed.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <mesh name="TechnoPlanet_1_0" geometry={nodes.TechnoPlanet_1_0.geometry} material={materials.material} rotation={[-Math.PI / 2, 0, 0]} />
        <mesh name="TechnoPlanetFlats_2_0" geometry={nodes.TechnoPlanetFlats_2_0.geometry} material={materials.material_1} rotation={[-Math.PI / 2, 0, 0]} />
        <mesh name="TechnoCity_3_0" geometry={nodes.TechnoCity_3_0.geometry} material={materials.material_2} rotation={[-Math.PI / 2, 0, 0]} />
        <mesh name="Atmo_Mat20_0" geometry={nodes.Atmo_Mat20_0.geometry} material={materials.Mat20} rotation={[-Math.PI / 2, 0, 0]} />
      </group>
    </group>
  )
}

useGLTF.preload('/3d-objects/digital-solutions/techno-planet/scene-transformed.glb')
