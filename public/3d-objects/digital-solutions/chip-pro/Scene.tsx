/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 scene.gltf -k -K -t -T s 
Files: scene.gltf [46.73KB] > C:\Users\owner\Desktop\maliek_davis\public\3d-objects\digital-solutions\chip-pro\scene-transformed.glb [2.37MB] (-4978%)
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    chip001_low_mat_0: THREE.Mesh
    ground_low_ground_0: THREE.Mesh
  }
  materials: {
    material: THREE.MeshStandardMaterial
    ground: THREE.MeshStandardMaterial
  }
}

export default function ChipPro(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/3d-objects/digital-solutions/chip-pro/scene-transformed.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <mesh name="chip001_low_mat_0" geometry={nodes.chip001_low_mat_0.geometry} material={materials.material} position={[0, 0, 0.068]} rotation={[-Math.PI / 2, 0, 0]} />
        {/* <mesh name="ground_low_ground_0" geometry={nodes.ground_low_ground_0.geometry} material={materials.ground} position={[0, -0.233, 0]} rotation={[-Math.PI / 2, 0, 0]} /> */}
      </group>
    </group>
  )
}

useGLTF.preload('/3d-objects/digital-solutions/chip-pro/scene-transformed.glb')
