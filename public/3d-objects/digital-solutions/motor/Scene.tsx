/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 scene.gltf -k -K -t -T s 
Files: scene.gltf [178.91KB] > C:\Users\owner\Desktop\maliek_davis\public\3d-objects\digital-solutions\motor\scene-transformed.glb [728.02KB] (-307%)
Author: Slava Z. (https://sketchfab.com/slava)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/oscillating-cylinder-motor-for-lego-3d-print-f66c6dc8059e4fa2b2a05c421cff81df
Title: Oscillating Cylinder Motor for LEGO (3d Print)
*/

import * as THREE from 'three'
import React from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF, SkeletonUtils } from 'three-stdlib'

type ActionName = 'Take 001'

interface GLTFAction extends THREE.AnimationClip {
  name: ActionName
}

type GLTFResult = GLTF & {
  nodes: {
    polySurface9_Cut_Mat_0: THREE.Mesh
    polySurface9_Dark_Mat_0: THREE.Mesh
    polySurface27_Cut_Mat_0: THREE.Mesh
    polySurface27_Dark_Mat_0: THREE.Mesh
    polySurface26_Dark_Mat_0: THREE.Mesh
    polySurface26_Cut_Mat_0: THREE.Mesh
    polySurface2_Dark_Mat_0: THREE.Mesh
    polySurface2_Cut_Mat_0: THREE.Mesh
    polySurface4_Dark_Mat_0: THREE.Mesh
    polySurface7_Cut_Mat_0: THREE.Mesh
    polySurface7_Yellow_Mat_0: THREE.Mesh
    polySurface8_Cut_Mat_0: THREE.Mesh
    polySurface8_Dark_Mat_0: THREE.Mesh
    polySurface6_Cut_Mat_0: THREE.Mesh
    polySurface6_Yellow_Mat_0: THREE.Mesh
    polySurface30_Chrome_Mat_0: THREE.Mesh
    polySurface1_Yellow_Mat_0: THREE.Mesh
    polySurface1_Cut_Mat_0: THREE.Mesh
    polySurface5_Yellow_Mat_0: THREE.Mesh
    polySurface5_Cut_Mat_0: THREE.Mesh
    polySurface3_Dark_Mat_0: THREE.Mesh
    polySurface3_Cut_Mat_0: THREE.Mesh
    polySurface32_Chrome_Mat_0: THREE.Mesh
    polySurface31_Chrome_Mat_0: THREE.Mesh
    polySurface39_Chrome_Mat_0: THREE.Mesh
    polySurface38_Chrome_Mat_0: THREE.Mesh
    polySurface11_Yellow_Mat_0: THREE.Mesh
    polySurface44_Chrome_Mat_0: THREE.Mesh
    polySurface46_Chrome_Mat_0: THREE.Mesh
    polySurface45_Chrome_Mat_0: THREE.Mesh
    Key_Yellow_Mat_0: THREE.Mesh
    Arrow_Exhaust_Arrow_Mat_0: THREE.Mesh
    Arrow_Intake_Arrow_Mat_0: THREE.Mesh
    polySurface20_Dark_Mat_0: THREE.Mesh
    polySurface28_Dark_Mat_0: THREE.Mesh
    polySurface22_Dark_Mat_0: THREE.Mesh
    polySurface19_Yellow_Mat_0: THREE.Mesh
    polySurface33_Chrome_Mat_0: THREE.Mesh
    polySurface35_Chrome_Mat_0: THREE.Mesh
    polySurface34_Chrome_Mat_0: THREE.Mesh
    polySurface23_Yellow_Mat_0: THREE.Mesh
    polySurface21_Dark_Mat_0: THREE.Mesh
    polySurface12_Yellow_Mat_0: THREE.Mesh
    polySurface40_Chrome_Mat_0: THREE.Mesh
    polySurface49_Chrome_Mat_0: THREE.Mesh
    pCube1_Dark_Mat_0: THREE.Mesh
    polySurface24_Yellow_Mat_0: THREE.Mesh
    polySurface52_Cut_Mat_0: THREE.Mesh
    polySurface52_Dark_Mat_0: THREE.Mesh
    polySurface53_Cut_Mat_0: THREE.Mesh
    polySurface53_Dark_Mat_0: THREE.Mesh
    polySurface41_Chrome_Mat_0: THREE.Mesh
    polySurface42_Chrome_Mat_0: THREE.Mesh
    polySurface43_Chrome_Mat_0: THREE.Mesh
    polySurface55_Cut_Mat_0: THREE.Mesh
    polySurface55_Dark_Mat_0: THREE.Mesh
    polySurface29_Chrome_Mat_0: THREE.Mesh
    polySurface36_Chrome_Mat_0: THREE.Mesh
    polySurface37_Chrome_Mat_0: THREE.Mesh
    polySurface50_Cut_Mat_0: THREE.Mesh
    polySurface50_Dark_Mat_0: THREE.Mesh
    polySurface51_Dark_Mat_0: THREE.Mesh
    polySurface51_Cut_Mat_0: THREE.Mesh
    polySurface54_Cut_Mat_0: THREE.Mesh
    polySurface54_Dark_Mat_0: THREE.Mesh
    polySurface47_Chrome_Mat_0: THREE.Mesh
    polySurface48_Chrome_Mat_0: THREE.Mesh
    polySurface10_Dark_Mat_0: THREE.Mesh
    Arrow_Inside_Arrow_Mat_0: THREE.Mesh
    Object_7: THREE.SkinnedMesh
    _rootJoint: THREE.Bone
  }
  materials: {
    PaletteMaterial002: THREE.MeshStandardMaterial
    PaletteMaterial003: THREE.MeshPhysicalMaterial
    PaletteMaterial004: THREE.MeshStandardMaterial
    PaletteMaterial001: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

export default function Motor(props: JSX.IntrinsicElements['group']) {
  const group = React.useRef<THREE.Group>(null)
  const { scene, animations } = useGLTF('/3d-objects/digital-solutions/motor/scene-transformed.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone) as GLTFResult
  const { actions } = useAnimations(animations, group)

  if (actions['Take 001']) {
    actions['Take 001'].play()
  }

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <primitive object={nodes._rootJoint} />
        <skinnedMesh name="Object_7" geometry={nodes.Object_7.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Object_7.skeleton} />
      </group>
    </group>
  )
}

useGLTF.preload('/3d-objects/digital-solutions/motor/scene-transformed.glb')
