/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 scene.gltf -k -K -t -T s 
Files: scene.gltf [7.09KB] > C:\Users\owner\Desktop\maliek_davis\public\3d-objects\digital-solutions\swapper\scene-transformed.glb [161.87KB] (-2183%)
Author: tamminen (https://sketchfab.com/tamminen)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/primitive-swapper-9200040d49db463b82f9032eaaa1636e
Title: Primitive Swapper
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type ActionName = 'MorphBake'

interface GLTFAction extends THREE.AnimationClip {
  name: ActionName
}

type GLTFResult = GLTF & {
  nodes: {
    mesh_0: THREE.Mesh
  }
  materials: {
    ['Scene_-_Root']: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const group = React.useRef<THREE.Group>(null)
  const { nodes, materials, animations } = useGLTF('/3d-objects/digital-solutions/swapper/scene-transformed.glb') as GLTFResult
  const { actions } = useAnimations(animations, group)

  if (actions.MorphBake) {
    actions.MorphBake.play()
  }

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <mesh name="mesh_0" geometry={nodes.mesh_0.geometry} material={materials['Scene_-_Root']} morphTargetDictionary={nodes.mesh_0.morphTargetDictionary} morphTargetInfluences={nodes.mesh_0.morphTargetInfluences} scale={1.654} />
      </group>
    </group>
  )
}

useGLTF.preload('/3d-objects/digital-solutions/swapper/scene-transformed.glb')
