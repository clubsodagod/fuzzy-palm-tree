// useMotionLogic.ts
import { useTransform, MotionValue } from 'framer-motion';
import { useResponsiveValues as rV } from '@/utility/functions';
import { Animate } from '@/utility/functions';

export const useMotionLogic = (scrollY: MotionValue, homeEventPoints: number[]) => {


    let lightBulb_scale = [rV([3, 4, 5]), 6, 10.01, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    let lightBulb_x = [rV([5, 0, -20]), rV([5, 5, 35]), rV([5, -5, -20]), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    let lightBulb_y = [rV([-6, -3, 7]), rV([11, 12, 7]), 7, 15, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    let lightBulb_z = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let lightBulb_rotation_x = [5, 6, 2, 3, 4, 3, 2, 1, 0, 1, 2, 3, 4, 3, 4, 3, 2, 1, 0, 1];
    let lightBulb_rotation_y = [1, 4, 2, 3, 4, 3, 2, 1, 0, 1, 2, 3, 4, 3, 4, 3, 2, 1, 0, 1];
    let lightBulb_rotation_z = [2, 8, 2, 3, 4, 3, 2, 1, 0, 1, 2, 3, 4, 3, 4, 3, 2, 1, 0, 1];

    let robot_scale = [0, 0, rV([3, 1, 3]), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    let robot_x = [rV([5, 0, 20]), rV([5, 5, -30]), rV([10, -5, -20]), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    let robot_y = [rV([-6, -3, -18]), rV([16, 9, -18]), rV([-55, 9, -18]), 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    let robot_z = [0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    let robot_rotation_x = [0, 0, 0.25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    let robot_rotation_y = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let robot_rotation_z = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];

    let posMachine_scale = [0, 0, 0, rV([15, 1, 3]), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    let posMachine_x = [rV([150, 0, 20]), rV([75, 5, -30]), rV([37.5, -5, -20]), 27.5, -50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    let posMachine_y = [rV([0, 0, 0]), rV([0, 0, 0]), rV([-50, 0, 0]), rV([17.5, 0, 0]), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    let posMachine_z = [0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    let posMachine_rotation_x = [0, 0, 0, 6.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    let posMachine_rotation_y = [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    let posMachine_rotation_z = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];

    let iPhone_scale = [1, 1, 1, rV([2, 1, 3]), rV([5, 0, 0]), 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    let iPhone_x = [rV([0, 0, 20]), rV([0, 5, -30]), rV([37.5, -5, -20]), 27.5, rV([-25, 0, 0]), 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    let iPhone_y = [rV([0, 0, 0]), rV([0, 0, 0]), rV([50, 0, 0]), rV([-17.5, 0, 0]), rV([-25, 0, 0]), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    let iPhone_z = [0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    let iPhone_rotation_x = [0, 0, 0, 6.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    let iPhone_rotation_y = [1, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    let iPhone_rotation_z = [4, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];

    let puzzle_scale = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([2, 0, 0]),
        rV([4, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let puzzle_x = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([-15, 0, 0]), rV([25, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let puzzle_y = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([25, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let puzzle_z = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let puzzle_rotation_x = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let puzzle_rotation_y = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([1, 0, 0]), rV([2, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let puzzle_rotation_z = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];


    let emoji_scale = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([1, 0, 0]),
        rV([15, 0, 0]), rV([30, 0, 0]), rV([20, 0, 0]), rV([25, 0, 0]), rV([1, 0, 0]),
        rV([15, 0, 0]), rV([20, 0, 0]), rV([15, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let emoji_x = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([-45, 0, 0]),
        rV([-25, 0, 0]), rV([0, 0, 0]), rV([7, 0, 0]), rV([-5, 0, 0]), rV([-25, 0, 0]),
        rV([0, 0, 0]), rV([30, 0, 0]), rV([-45, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let emoji_y = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([-30, 0, 0]), rV([-10, 0, 0]), rV([20, 0, 0]), rV([0, 0, 0]),
        rV([20, 0, 0]), rV([-15, 0, 0]), rV([-20, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let emoji_z = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let emoji_rotation_x = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([-18, 0, 0]), rV([-36, 0, 0]), rV([-9, 0, 0]), rV([-18, 0, 0]),
        rV([18, 0, 0]), rV([0, 0, 0]), rV([14, 0, 0]), rV([18, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let emoji_rotation_y = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let emoji_rotation_z = [
        rV([0, 0, 0]), rV([3, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];



    let swiss_scale = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([1, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([50, 0, 0]), rV([250, 0, 0]), rV([200, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let swiss_x = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([250, 0, 0]), rV([0, 0, 0]), rV([9, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let swiss_y = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([250, 0, 0]), rV([0, 0, 0]), rV([-20, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let swiss_z = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let swiss_rotation_x = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([1, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let swiss_rotation_y = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([-2, 0, 0]), rV([1, 0, 0]),
        rV([2, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let swiss_rotation_z = [
        rV([0, 0, 0]), rV([3, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([1, 0, 0]),
        rV([2, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];



    let macbook_scale = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([1, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([72, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let macbook_x = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([250, 0, 0]), rV([0, 0, 0]), rV([9, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let macbook_y = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([-20, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let macbook_z = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let macbook_rotation_x = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([-5, 0, 0]), rV([1, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let macbook_rotation_y = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([2, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let macbook_rotation_z = [
        rV([0, 0, 0]), rV([3, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];



    let coinGrowth_scale = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0.625, 0, 0]), rV([1, 0, 0]), rV([0.5, 0, 0]),
        rV([3, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let coinGrowth_x = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let coinGrowth_y = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([-10, 0, 0]), rV([-35, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let coinGrowth_z = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let coinGrowth_rotation_x = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let coinGrowth_rotation_y = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([-1.5, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let coinGrowth_rotation_z = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];



    let dataHighway_scale = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([5, 0, 0]), rV([75, 0, 0]),
        rV([55, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let dataHighway_x = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([-125, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let dataHighway_y = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let dataHighway_z = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let dataHighway_rotation_x = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let dataHighway_rotation_y = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let dataHighway_rotation_z = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([20, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];



    let emojiTwo_scale = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([10, 0, 0]),
        rV([35, 0, 0]), rV([25, 0, 0]), rV([10, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let emojiTwo_x = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([25, 0, 0]),
        rV([25, 0, 0]), rV([-25, 0, 0]), rV([50, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let emojiTwo_y = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([65, 0, 0]), rV([-25, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let emojiTwo_z = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let emojiTwo_rotation_x = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([-3, 0, 0]),
        rV([-3, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let emojiTwo_rotation_y = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([-3, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let emojiTwo_rotation_z = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];



    let dollarSign_scale = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([20, 0, 0]), rV([10, 0, 0]), rV([0, 0, 0]), rV([20, 0, 0]), rV([0, 0, 0])
    ];
    let dollarSign_x = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([-50, 0, 0])
    ];
    let dollarSign_y = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let dollarSign_z = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let dollarSign_rotation_x = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let dollarSign_rotation_y = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let dollarSign_rotation_z = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];



    let combinationLock_scale = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([6, 0, 0]), rV([0, 0, 0])
    ];
    let combinationLock_x = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let combinationLock_y = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([6, 0, 0]), rV([10, 0, 0]), rV([0, 0, 0])
    ];
    let combinationLock_z = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let combinationLock_rotation_x = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([-1.5, 0, 0]), rV([0, 0, 0])
    ];
    let combinationLock_rotation_y = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([9, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];
    let combinationLock_rotation_z = [
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
        rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
    ];


    // Functions to handle animations    
    const lightBulbMotion = () => Animate(useTransform, scrollY, lightBulb_scale, lightBulb_x, lightBulb_y, lightBulb_z, lightBulb_rotation_x, lightBulb_rotation_y, lightBulb_rotation_z, homeEventPoints);

    const robotMotion = () => Animate(useTransform, scrollY, robot_scale, robot_x, robot_y, robot_z, robot_rotation_x, robot_rotation_y, robot_rotation_z, homeEventPoints);

    const posMachineMotion = () => Animate(useTransform, scrollY, posMachine_scale, posMachine_x, posMachine_y, posMachine_z, posMachine_rotation_x, posMachine_rotation_y, posMachine_rotation_z, homeEventPoints);

    const iPhoneMotion = () => Animate(useTransform, scrollY, iPhone_scale, iPhone_x, iPhone_y, iPhone_z, iPhone_rotation_x, iPhone_rotation_y, iPhone_rotation_z, homeEventPoints);

    const puzzleMotion = () => Animate(useTransform, scrollY, puzzle_scale, puzzle_x, puzzle_y, puzzle_z, puzzle_rotation_x, puzzle_rotation_y, puzzle_rotation_z, homeEventPoints);

    const emojiMotion = () => Animate(useTransform, scrollY, emoji_scale, emoji_x, emoji_y, emoji_z, emoji_rotation_x, emoji_rotation_y, emoji_rotation_z, homeEventPoints);

    const swissMotion = () => Animate(useTransform, scrollY, swiss_scale, swiss_x, swiss_y, swiss_z, swiss_rotation_x, swiss_rotation_y, swiss_rotation_z, homeEventPoints);

    const macbookMotion = () => Animate(useTransform, scrollY, macbook_scale, macbook_x, macbook_y, macbook_z, macbook_rotation_x, macbook_rotation_y, macbook_rotation_z, homeEventPoints);

    const coinGrowthMotion = () => Animate(useTransform, scrollY, coinGrowth_scale, coinGrowth_x, coinGrowth_y, coinGrowth_z, coinGrowth_rotation_x, coinGrowth_rotation_y, coinGrowth_rotation_z, homeEventPoints);

    const dataHighwayMotion = () => Animate(useTransform, scrollY, dataHighway_scale, dataHighway_x, dataHighway_y, dataHighway_z, dataHighway_rotation_x, dataHighway_rotation_y, dataHighway_rotation_z, homeEventPoints);

    const emojiTwoMotion = () => Animate(useTransform, scrollY, emojiTwo_scale, emojiTwo_x, emojiTwo_y, emojiTwo_z, emojiTwo_rotation_x, emojiTwo_rotation_y, emojiTwo_rotation_z, homeEventPoints);

    const dollarSignMotion = () => Animate(useTransform, scrollY, dollarSign_scale, dollarSign_x, dollarSign_y, dollarSign_z, dollarSign_rotation_x, dollarSign_rotation_y, dollarSign_rotation_z, homeEventPoints);

    const combinationLockMotion = () => Animate(useTransform, scrollY, combinationLock_scale, combinationLock_x, combinationLock_y, combinationLock_z, combinationLock_rotation_x, combinationLock_rotation_y, combinationLock_rotation_z, homeEventPoints);

    // Return the motions
    return {
        lightBulbMotion,
        robotMotion,
        posMachineMotion,
        iPhoneMotion,
        puzzleMotion,
        emojiMotion,
        swissMotion,
        macbookMotion,
        coinGrowthMotion,
        dataHighwayMotion,
        emojiTwoMotion,
        dollarSignMotion,
        combinationLockMotion,
    };
}



// [
//     rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
//     rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
//     rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]),
//     rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0]), rV([0, 0, 0])
// ];