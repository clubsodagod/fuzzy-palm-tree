// useMotionLogic.ts
import { useTransform, MotionValue } from 'framer-motion';
import { useResponsiveValues as rV } from '@/utility/functions';
import { Animate } from '@/utility/functions';

export const useMotionLogic = (scrollY: MotionValue, homeEventPoints: number[]) => {
    


    let lightBulb_scale = [
        7, 9, 10, 5, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        5, 9, 10, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let lightBulb_x = [
        rV([5, 5, -20]), rV([-25, -25, 20]), rV([0, -5, -20]), 40, 120,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 80,
        60, 20, rV([5, -5, -20]), -120, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];

    let lightBulb_y = [
        rV([-6, 3, 7]), rV([11, -16, 3]), 0, rV([15, 0, 0]), rV([3, 0, 0]),
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, -9, -7,
        rV([-6, -5, 25]), -15, rV([7, -20, 0]), rV([15, -8, 0]), rV([3, -9, 0]),
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let lightBulb_z = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let lightBulb_rotation_x = [
        rV([5, 0, 0]), rV([6, 0, 6]), rV([2, 0, 0]), rV([3, 0, 0]), rV([4, 0, 0]),
        rV([3, 0, 0]), rV([2, 0, 0]), rV([1, 0, 0]), 0, rV([1, 0, 0]),
        rV([2, 0, 0]), rV([3, 0, 0]), rV([4, 0, 0]), rV([3, 0, 0]), rV([4, 0, 0]),
        rV([3, 0, 0]), rV([2, 0, 0]), rV([1, 0, 0]), 0, rV([1, 0, 0]),
        rV([5, 0, 0]), rV([6, 0, 6]), rV([2, 0, 0]), rV([3, 0, 0]), rV([4, 0, 0]),
        rV([3, 0, 0]), rV([2, 0, 0]), rV([1, 0, 0]), 0, rV([1, 0, 0]),
        rV([2, 0, 0]), rV([3, 0, 0]), rV([4, 0, 0]), rV([3, 0, 0]), rV([4, 0, 0]),
        rV([3, 0, 0]), rV([2, 0, 0]), rV([1, 0, 0]), 0, rV([1, 0, 0]),
        0, 0, 0, 0,
    ];
    let lightBulb_rotation_y = [
        1, rV([4, 4, 0]), 2, 3, 4,
        3, rV([2, 0, 0]), rV([1, 0, 0]), 0, rV([1, 0, 0]),
        rV([2, 0, 0]), 3, rV([4, 0, 0]), rV([3, 0, 0]), rV([4, 0, 0]),
        3, rV([2, 0, 0]), rV([1, 0, 0]), 0, rV([1, 0, 0]),
        1, rV([4, 4, 0]), 2, 3, 4,
        3, rV([2, 0, 0]), rV([1, 0, 0]), 0, rV([1, 0, 0]),
        rV([2, 0, 0]), 3, rV([4, 0, 0]), rV([3, 0, 0]), rV([4, 0, 0]),
        3, rV([2, 0, 0]), rV([1, 0, 0]), 0, rV([1, 0, 0]),
        0, 0, 0, 0,
    ];
    let lightBulb_rotation_z = [
        rV([2, 2, 0]), rV([8, 8, 0.5]), rV([2, 0, 0]), rV([3, 0, 0]), rV([4, 0, 0]),
        rV([3, 0, 0]), rV([2, 0, 0]), rV([1, 0, 0]), 0, rV([1, 0, 0]),
        rV([2, 0, 0]), rV([3, 0, 0]), rV([4, 0, 0]), rV([3, 0, 0]), rV([4, 0, 0]),
        rV([3, 0, 0]), rV([2, 0, 0]), rV([1, 0, 0]), 0, rV([1, 0, 0]),
        rV([2, 2, 0]), rV([8, 8, 0.5]), rV([2, 0, 0]), rV([3, 0, 0]), rV([4, 0, 0]),
        rV([3, 0, 0]), rV([2, 0, 0]), rV([1, 0, 0]), 0, rV([1, 0, 0]),
        rV([2, 0, 0]), rV([3, 0, 0]), rV([4, 0, 0]), rV([3, 0, 0]), rV([4, 0, 0]),
        rV([3, 0, 0]), rV([2, 0, 0]), rV([1, 0, 0]), 0, rV([1, 0, 0]),
        0, 0, 0, 0,
    ];




    let robot_scale = [
        0, 0, 0, 7, 21,
        14, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let robot_x = [
        0, 0, rV([5, 0, 100]), rV([5, 5, 40]), rV([10, -5, -20])
        , -35, -145, 0, 0, 0
        , 0, 0, 0, 0, 0
        , 0, 0, 0, 0, 0,
        rV([5, 0, 20]), rV([5, 5, 40]), rV([10, -5, -20]), 0, 0
        , 0, 0, 0, 0, 0
        , 0, 0, 0, 0, 0
        , 0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];

    let robot_y = [
        0, 0, rV([-6, -3, 10]), rV([-6, -3, -10]), -14,
        -18, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        rV([-6, -3, 10]), rV([16, -14, -14]), rV([-18, -18, -18]), 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let robot_z = [
        0, 0, 2, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 2, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let robot_rotation_x = [
        0, 0, rV([0.25, 0, 0]), 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, rV([0.25, 0, 0]), 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let robot_rotation_y = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let robot_rotation_z = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];




    let posMachine_scale = [
        0, 0, 0, 0, 0,
        rV([0,0.1,0]), rV([0.1,38,0.1]), rV([24,14,24]), rV([7,0,7]), 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let posMachine_x = [
        0, 0, 0, 0, 0,
        rV([-60,-60,-60]), rV([0,0,-60]), rV([0,5,0]), rV([40,90,40]), rV([80,0,80]),
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let posMachine_y = [
        0, 0, rV([-50, 0, 0]), rV([17.5, 17.5, 12]), rV([0, 10, 10]),
        0, rV([24,14,12]), 14, -54, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, rV([-50, 0, 0]), rV([17.5, 17.5, 12]), rV([0, 10, 10]),
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let posMachine_z = [
        0, 0, rV([2, 0, 0]), 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, rV([2, 0, 0]), 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let posMachine_rotation_x = [
        0, 0, 0, 0, rV([6.5, 0, 0]),
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, rV([6.5, 0, 0]),
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let posMachine_rotation_y = [
        0, 0, 0, 1, 0,
        0, 0, 1, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 1, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let posMachine_rotation_z = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];

    let iPhone_scale = [
        0, 0, 0, 0, 0,
        0, 3, 9, 10, 12,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let iPhone_x = [
        0, 0, 0, 0, 200,
        100, 35, 0, -90, rV([45,45,-55]),
        75, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        rV([0, 0, 20]), rV([0, 5, 120]), rV([37.5, 37.5, 90]), rV([27.5, 12, 35]), rV([-25, -25, -85]),
        rV([18, 55, 55]), rV([45, 85, 65]), 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let iPhone_y = [
        0, 0, 0, 0, 0,
        0, -50, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, rV([50, 0, 0]), rV([-17.5, -14, -34]), rV([-25, 0, -20]),
        rV([-10, -10, -10]), 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let iPhone_z = [
        0, 0, rV([2, 0, 0]), 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, rV([2, 0, 0]), 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let iPhone_rotation_x = [
        0, 0, 0, rV([6.5, 6.5, 6.5]), 0,
        rV([6.5, 12, 6.5]), 6.5, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, rV([6.5, 6.5, 6.5]), 0,
        rV([6.5, 12, 6.5]), 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let iPhone_rotation_y = [
        1, 0, 0, 1, 2,
        rV([2, 12, 2]), 1, 0, 2, 1,
        3, 9, 0, 0, 0,
        0, 0, 0, 0, 0,
        1, 0, 0, 1, 2,
        rV([2, 12, 2]), 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let iPhone_rotation_z = [
        4, 0, 0, 0, 6.5,
        12, 12, 0, 6.5, 12,
        2, 20, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];






    let puzzle_scale = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, rV([0,6,0]),
        rV([0,12,0]),  rV([6,18,6]), rV([12,18,12]), rV([18,0,18]), rV([18,0,18]),
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];

    let puzzle_x = [
        0, 0, 0, 0, 0,
        0, 0, 0, rV([0,65,0]), rV([0,75,0]),
        -65, rV([10,0,-65]), 75, 150, 280,
        280, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];

    let puzzle_y = [
        0, 0, 0, 0, 0,
        25, 0, 0, 0, 0,
        0, rV([-10,0,0]), -30, 30, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        25, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];

    let puzzle_z = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];

    let puzzle_rotation_x = [
        0, 0, 0, 0, 0,
        0, 3, 0, 0, 0,
        0, 3, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 3, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];

    let puzzle_rotation_y = [
        0, 0, 0, 0, 0,
        1, 0, 0, 0, 0,
        0, 1, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        1, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];

    let puzzle_rotation_z = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];





    let emoji_scale = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, rV([0,48,0]), rV([24,42,12]), 48,
        42, 36, 0, 0, rV([9,9,0]),
        rV([24,42,0]), rV([28,42,24]), rV([9,38,9]), 18, rV([0,0,32]),
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let emoji_x = [
        0, 0, 0, 0, rV([-45, -90, -135]),
        rV([-25, -50, -175]), rV([-25, -50, -175]), rV([7, 14, 21]), rV([-5, -10, -20]), rV([-25, -50, -100]),
        0, rV([30, 15, 30]), rV([-45, -45, -45]), rV([0,25,70]), -30,
        0, 25, 90, 0, rV([0,-45,0]),
        rV([0,0,0]), rV([0,95,-45]), 0, 0, 45,
        rV([-25, -50, -175]), rV([-25, -50, -175]), rV([7, 14, 21]), rV([-5, -10, -20]), rV([-25, -50, -100]),
        0, rV([30, 15, 30]), rV([-45, -45, -45]), 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let emoji_y = [
        0, 0, 0, 0, 0,
        0, rV([-30, -20, -10]), rV([-10, -6.7, -10]), rV([20, 27, 20]), 0,
        rV([20, 20, 20]), rV([-15, -7, -7]), rV([-20, -20, -20]), 0, -5,
        0, 17, 0, 0, -5,
        rV([-24,-24,0]), rV([48,48,13]), rV([36,24,0]), 24, 6,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let emoji_z = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let emoji_rotation_x = [
        0, 0, 0, 0, 0,
        0, rV([-18, 0, -18]), rV([-27, 11, -27]), rV([-36, 0, -36]), rV([-45, 0, -45]),
        rV([-54, 14, -54]), rV([-63, 24, -63]), rV([-18, -18, -18]), rV([-36, -2, -36]), -1,
        rV([0,0,34]), -4, 0, 0, 0,
        rV([-1,-1,0]), rV([0,0,-1]), rV([-1,-1,0]), 0, -3,
        0, -3, rV([-27, 11, -27]), rV([-36, 0, -36]), rV([-45, 0, -45]),
        rV([-54, 14, -54]), rV([-63, 24, -63]), rV([-18, -18, -18]), rV([-36, -36, -36]), 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let emoji_rotation_y = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let emoji_rotation_z = [
        0, 3, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, -0.5, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 
        0, 0, 0, 0,
    ];



    let swiss_scale = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, rV([200,0,0]), rV([2000,1500,20]), rV([0,1000,1000]),
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let swiss_x = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, rV([0,-80,0]), rV([0,90,0]), rV([50,100,50]),
        rV([75,150,75]), 75, 0, 0, 0,
        0, 0, rV([250, 250, 250]), rV([0, 100, 250]), rV([9, -30, -150]),
        rV([0, -100, 150]), 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let swiss_y = [
        0, 0, 0, 0, 0,
        0, 0, rV([250, 500, 750]), 0, rV([-20, -20, 0]),
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, rV([250, 500, 750]), 0, rV([-20, -20, 0]),
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let swiss_z = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let swiss_rotation_x = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 1,
        0, 0, 0, 0, 0,
        0, 0, 0, -3, 1,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 1,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let swiss_rotation_y = [
        0, 0, 0, 0, 0,
        0, 0, 0, rV([-2, -2, -2]), 1,
        2, 0, 0, 0, 0,
        0, 0, 0, 3, 1,
        0, 0, 0, 0, 0,
        0, 0, 0, -2, 1,
        2, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let swiss_rotation_z = [
        0, rV([3, 0, 0]), 0, 0, 0,
        0, 0, 0, 0, 1,
        2, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, rV([3, 0, 0]), 0, 0, 0,
        0, 0, 0, 0, 1,
        2, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];



    let macbook_scale = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, rV([0,120,0]), rV([72,240,0]),
        rV([360,72,72]), rV([96,48,180]), rV([0,0,48]), 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let macbook_x = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, rV([0,45,0]), 0, rV([-75,-15,0]),
        rV([45,45,-75]), rV([65,75,-15]), rV([90,90,45]), rV([0,90,90]), 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let macbook_y = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, rV([-40,-30,0]),
        rV([0,0,50]), rV([0,0,-10]), -15, -45, -90,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let macbook_z = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let macbook_rotation_x = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, rV([0.5,0.5,0]),
        rV([1,1,5]), rV([-3,-3,1]), rV([0,0,-3]), 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let macbook_rotation_y = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        rV([2, 0, 0]), 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        rV([2, 0, 0]), 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let macbook_rotation_z = [
        0, rV([3, 0, 0]), 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, rV([3, 0, 0]), 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];



    let coinGrowth_scale = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, rV([1,2,0]), rV([2,1,1]), rV([0.5,0.5,2]), rV([0,0,0.5]),
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let coinGrowth_x = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        -50, rV([-50,0,-150]), rV([15,-50,-50]), rV([-50,-150,15]), rV([-150,0,-50]),
        rV([0,0,-150]), 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let coinGrowth_y = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, -25, -25,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let coinGrowth_z = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let coinGrowth_rotation_x = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let coinGrowth_rotation_y = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, rV([-1.5, 0, 0]), 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, rV([-1.5, 0, 0]), 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let coinGrowth_rotation_z = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];



    let dataHighway_scale = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, rV([0,135,0]), rV([160,0,0]),
        rV([0,0,100]), 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let dataHighway_x = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, -40, rV([-40,0,0]),
        rV([0,-20,-20]), 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let dataHighway_y = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let dataHighway_z = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let dataHighway_rotation_x = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let dataHighway_rotation_y = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let dataHighway_rotation_z = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, rV([20, 0, 0]),
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, rV([20, 0, 0]),
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];



    let emojiTwo_scale = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        rV([0,38,0]), rV([36,38,0]), rV([38,0,0]), rV([0,0,36]), 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let emojiTwo_x = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 25,
        25, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        rV([0,45,0]), rV([0,15,0]), rV([45,-75,0]), rV([25,0,45]), rV([0,0,25]),
        rV([-25,-25,0]), rV([50,50,-25]), rV([0,0,50]), 0, 0,
        0, 0, 0, 0,
    ];
    let emojiTwo_y = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, -25, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, rV([12,12,0]), rV([-12,-24,0]), rV([85,-12,-12]), 85,
        95, -25, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let emojiTwo_z = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let emojiTwo_rotation_x = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, rV([-9,-6,0]), 0, rV([0,-3.5,-3.5]), 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let emojiTwo_rotation_y = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, rV([-3, -3, -6]),
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, rV([-6,0,0]), 0, rV([-3,0,0]), rV([-6, -3, -6]),
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let emojiTwo_rotation_z = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];



    let dollarSign_scale = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, rV([28,0,0]), rV([10,10,0]), rV([1,28,28]),
        rV([36,36,10]), rV([20,20,1]), rV([0,0,36]), rV([0,0,20]), 0,
        0, 0, 0, 0,
    ];
    let dollarSign_x = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, rV([150,150,0]), rV([-70,-70,0]), rV([-20,0,150]), rV([55,55,150]),
        rV([-70,0,-70]), 55, 35, 45, -90,
        0, 0, 0, 0,
    ];
    let dollarSign_y = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 75, rV([0,75,0]), rV([0,-30,0]), rV([0,-75,75]),
        0, 0, 0, 0, 0, 
        0, 0, 0, 0,
    ];
    let dollarSign_z = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let dollarSign_rotation_x = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let dollarSign_rotation_y = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];
    let dollarSign_rotation_z = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0,
    ];



    let combinationLock_scale = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, rV([0,5,0]), rV([5,12,0]), rV([12,12,0]), rV([0,0,5]), 
        rV([0,0,12]), 0, 0, 0,
    ];
    let combinationLock_x = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0,rV([0,85,0]), rV([0,-25,0]), rV([0, 85, 85]), rV([-25,-25,0]), 
        rV([50,50,-25]), rV([0,75,50]), 0, 0,
    ];
    let combinationLock_y = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, rV([6, 0, 0]), rV([10, 0, 0]), rV([-20, 0, 0]),
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 40, rV([6, -20, 0]), rV([10, -40, 0]), rV([-20, -20, 0]), 
        0, 0, 0, 0,
    ];
    let combinationLock_z = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 
        0, 0, 0, 0,
    ];
    let combinationLock_rotation_x = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, -1.25,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, -3.25, rV([-3.25,-1.25,0]), rV([-1.25,0,0]), rV([0,0,3.25]), 
        rV([0,0,-1.25]), 0, 0, 0,
    ];
    let combinationLock_rotation_y = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, rV([9, 0, 0]), 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0.75, 0.75, rV([0.5,0,0]), 0, 
        0.75, 0, 0, 0,
    ];
    let combinationLock_rotation_z = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 
        0, 0, 0, 0,
    ];


    let atom_scale = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, rV([7,7,0]), 
        rV([14,14,0]), rV([0,0,7]), rV([0,0,14]), 0,
    ];
    let atom_x = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, rV([85, 0, 125]), rV([-55, 0, 125]),
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, rV([85, -45, 125]), rV([-55, 0, 125]), 
        rV([35, 55, 55]), -45, 65, 0,
    ];
    let atom_y = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, rV([40, -30, 0]), 
        rV([0, 0, 0]), 0, 0, 0,
    ];
    let atom_z = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 
        0, 0, 0, 0,
    ];
    let atom_rotation_x = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 
        0, 0, 0, 0,
    ];
    let atom_rotation_y = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 
        0, 0, 0, 0,
    ];
    let atom_rotation_z = [
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 
        0, 0, 0, 0,
    ];


    // Functions to handle animations    
    const lightBulbMotion = () => Animate(useTransform, scrollY, lightBulb_scale, lightBulb_x, lightBulb_y, lightBulb_z, lightBulb_rotation_x, lightBulb_rotation_y, lightBulb_rotation_z, homeEventPoints);

    const robotMotion = () => Animate(useTransform, scrollY, robot_scale, robot_x, robot_y, robot_z, robot_rotation_x, robot_rotation_y, robot_rotation_z, homeEventPoints);

    const posMachineMotion = () => Animate(useTransform, scrollY, posMachine_scale, posMachine_x, posMachine_y, posMachine_z, posMachine_rotation_x, posMachine_rotation_y, posMachine_rotation_z, homeEventPoints);

    const iPhoneMotion = () => Animate(useTransform, scrollY, iPhone_scale, iPhone_x, iPhone_y, iPhone_z, iPhone_rotation_x, iPhone_rotation_y, iPhone_rotation_z, homeEventPoints);

    const puzzleMotion = () => Animate(useTransform, scrollY, puzzle_scale, puzzle_x, puzzle_y, puzzle_z, puzzle_rotation_x, puzzle_rotation_y, puzzle_rotation_z, homeEventPoints);

    const emojiMotion = () => Animate(useTransform, scrollY, emoji_scale, emoji_x, emoji_y, emoji_z, emoji_rotation_x, emoji_rotation_y, emoji_rotation_z, homeEventPoints);

    const swissMotion = () => Animate(useTransform, scrollY, swiss_scale, swiss_x, swiss_y, swiss_z, swiss_rotation_x, swiss_rotation_y, swiss_rotation_z, homeEventPoints);

    const macbookMotion = () => Animate(useTransform, scrollY, macbook_scale, macbook_x, macbook_y, macbook_z, macbook_rotation_x, macbook_rotation_y, macbook_rotation_z, homeEventPoints);

    const coinGrowthMotion = () => Animate(useTransform, scrollY, coinGrowth_scale, coinGrowth_x, coinGrowth_y, coinGrowth_z, coinGrowth_rotation_x, coinGrowth_rotation_y, coinGrowth_rotation_z, homeEventPoints);

    const dataHighwayMotion = () => Animate(useTransform, scrollY, dataHighway_scale, dataHighway_x, dataHighway_y, dataHighway_z, dataHighway_rotation_x, dataHighway_rotation_y, dataHighway_rotation_z, homeEventPoints);

    const emojiTwoMotion = () => Animate(useTransform, scrollY, emojiTwo_scale, emojiTwo_x, emojiTwo_y, emojiTwo_z, emojiTwo_rotation_x, emojiTwo_rotation_y, emojiTwo_rotation_z, homeEventPoints);

    const dollarSignMotion = () => Animate(useTransform, scrollY, dollarSign_scale, dollarSign_x, dollarSign_y, dollarSign_z, dollarSign_rotation_x, dollarSign_rotation_y, dollarSign_rotation_z, homeEventPoints);

    const combinationLockMotion = () => Animate(useTransform, scrollY, combinationLock_scale, combinationLock_x, combinationLock_y, combinationLock_z, combinationLock_rotation_x, combinationLock_rotation_y, combinationLock_rotation_z, homeEventPoints);

    const atomMotion = () => Animate(useTransform, scrollY, atom_scale, atom_x, atom_y, atom_z, atom_rotation_x, atom_rotation_y, atom_rotation_z, homeEventPoints);

    // Return the motions
    return {
        lightBulbMotion,
        robotMotion,
        posMachineMotion,
        iPhoneMotion,
        puzzleMotion,
        emojiMotion,
        swissMotion,
        macbookMotion,
        coinGrowthMotion,
        dataHighwayMotion,
        emojiTwoMotion,
        dollarSignMotion,
        combinationLockMotion,
        atomMotion,
    };
}



// [
//     0, 0, 0, 0, 0,
//     0, 0, 0, 0, 0,
//     0, 0, 0, 0, 0,
//     0, 0, 0, 0, 0
// ];